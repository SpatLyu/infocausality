// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RcppGenLatticeLagUni
Rcpp::NumericVector RcppGenLatticeLagUni(const Rcpp::NumericVector& vec, const Rcpp::List& nb, int lagNum);
RcppExport SEXP _infocausality_RcppGenLatticeLagUni(SEXP vecSEXP, SEXP nbSEXP, SEXP lagNumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type nb(nbSEXP);
    Rcpp::traits::input_parameter< int >::type lagNum(lagNumSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppGenLatticeLagUni(vec, nb, lagNum));
    return rcpp_result_gen;
END_RCPP
}
// RcppGenLatticeLagMulti
Rcpp::NumericMatrix RcppGenLatticeLagMulti(const Rcpp::NumericMatrix& vecs, const Rcpp::List& nb, const Rcpp::IntegerVector& lagNums);
RcppExport SEXP _infocausality_RcppGenLatticeLagMulti(SEXP vecsSEXP, SEXP nbSEXP, SEXP lagNumsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type vecs(vecsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type nb(nbSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type lagNums(lagNumsSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppGenLatticeLagMulti(vecs, nb, lagNums));
    return rcpp_result_gen;
END_RCPP
}
// RcppGenGridLagUni
Rcpp::NumericVector RcppGenGridLagUni(const Rcpp::NumericMatrix& mat, int lagNum);
RcppExport SEXP _infocausality_RcppGenGridLagUni(SEXP matSEXP, SEXP lagNumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type lagNum(lagNumSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppGenGridLagUni(mat, lagNum));
    return rcpp_result_gen;
END_RCPP
}
// RcppGenGridLagMulti
Rcpp::NumericMatrix RcppGenGridLagMulti(const Rcpp::NumericMatrix& mat, int nrow, int lagNum);
RcppExport SEXP _infocausality_RcppGenGridLagMulti(SEXP matSEXP, SEXP nrowSEXP, SEXP lagNumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type lagNum(lagNumSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppGenGridLagMulti(mat, nrow, lagNum));
    return rcpp_result_gen;
END_RCPP
}
// RcppGenTSLagMulti
Rcpp::NumericMatrix RcppGenTSLagMulti(const Rcpp::NumericMatrix& mat, int lagNum);
RcppExport SEXP _infocausality_RcppGenTSLagMulti(SEXP matSEXP, SEXP lagNumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type lagNum(lagNumSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppGenTSLagMulti(mat, lagNum));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_infocausality_RcppGenLatticeLagUni", (DL_FUNC) &_infocausality_RcppGenLatticeLagUni, 3},
    {"_infocausality_RcppGenLatticeLagMulti", (DL_FUNC) &_infocausality_RcppGenLatticeLagMulti, 3},
    {"_infocausality_RcppGenGridLagUni", (DL_FUNC) &_infocausality_RcppGenGridLagUni, 2},
    {"_infocausality_RcppGenGridLagMulti", (DL_FUNC) &_infocausality_RcppGenGridLagMulti, 3},
    {"_infocausality_RcppGenTSLagMulti", (DL_FUNC) &_infocausality_RcppGenTSLagMulti, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_infocausality(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
